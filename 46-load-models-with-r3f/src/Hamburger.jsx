/*
Mostly Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useControls } from 'leva'
import { useFrame } from '@react-three/fiber'


export default function Model(props) {
  const { nodes, materials } = useGLTF("./hamburger.glb");
  const { cheese } = useControls('Burger', { cheese: '#ffa600'})
  const topBunRef = useRef()
  const bottomBunRef = useRef()
  const cheeseRef = useRef()
  const meatRef = useRef()
  useFrame((state, delta) => {
    const time = state.clock.elapsedTime

    // Have to add values to offset sin range 
    // 6.77 for original position + 4 for sin function (amplitude)
    // 3.04 is for offsetting rotation since it uses center of whole mesh, not bun
    topBunRef.current.position.y = 5 * Math.sin(time) + 6.77
    topBunRef.current.rotation.x = - (time + 1.5) + Math.sin(time + 1.5)

    bottomBunRef.current.position.y = - Math.sin(time) - 1
    cheeseRef.current.position.y = 0.5 * Math.sin(time) + 3.54
    meatRef.current.position.y = - 0.5 * Math.sin(time) + 2.34
  })

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottomBun.geometry}
        material={materials.BunMaterial}
        ref={bottomBunRef}
        position={[0, 1, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.meat.geometry}
        material={materials.SteakMaterial}
        position={[0, 2.82, 0]}
        ref={meatRef}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cheese.geometry}
        material={materials.CheeseMaterial}
        material-color={cheese}
        position={[0, 3.04, 0]}
        ref={cheeseRef}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.topBun.geometry}
        material={materials.BunMaterial}
        position={[0, 1.77, 0]}
        ref={ topBunRef }
      />
    </group>
  );
}

useGLTF.preload("./hamburger.glb");
